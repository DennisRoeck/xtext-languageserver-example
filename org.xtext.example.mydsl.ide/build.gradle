plugins {
	id 'com.github.johnrengelman.shadow' version '1.2.3'
}

apply plugin: 'application'

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

dependencies {
	compile project(':org.xtext.example.mydsl')
	compile "org.eclipse.xtext:org.eclipse.xtext.ide:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase.ide:${xtextVersion}"
}

mainClassName = "org.eclipse.xtext.ide.server.ServerLauncher"

startScripts {
    applicationName = 'MyDsl Language Server'
}

task httpShadowJar(type: ShadowJar) {
	dependsOn assemble
	manifest.attributes 'Main-Class': 'org.xtext.example.mydsl.ide.RunServer'
	classifier = "http-all"
	from(project.convention.getPlugin(JavaPluginConvention).sourceSets.main.output)
    configurations = [project.configurations.runtime]
    exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
}

shadowJar {
	dependsOn httpShadowJar
	baseName = 'mydsl-full'
	classifier = null
	version = null
	destinationDir = file("$projectDir/../vscode-extension-self-contained/src")
}

clean.doFirst {
    delete tasks.shadowJar.archivePath
}